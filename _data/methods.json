[{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Origin3D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D$create","name":"create","synopsis":"Create a new 3D canvas centred on the current position","args":"():table"},{"target":"net.minecraft.tileentity.TileEntityFurnace","method":"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getCookTime","name":"getCookTime","synopsis":" Number of ticks the current item has cooked for","args":"():int"},{"target":"net.minecraft.tileentity.TileEntityFurnace","method":"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getRemainingBurnTime","name":"getRemainingBurnTime","synopsis":" Number of ticks of fuel left","args":"():int"},{"target":"net.minecraft.tileentity.TileEntityFurnace","method":"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getBurnTime","name":"getBurnTime","synopsis":" Number of ticks of burning the current fuel provides","args":"():int"},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas$canvas3d","name":"canvas3d","synopsis":"Get the 3D canvas for these glasses","args":"():table","subtarget":"org.squiddev.plethora.gameplay.modules.glasses.CanvasServer","modules":["plethora:glasses"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$propel","name":"propel","synopsis":"Propel this minecart in along the track","args":"(velocity:number)","subtarget":"net.minecraft.entity.item.EntityMinecart","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsScanner$getBlockMeta","name":"getBlockMeta","synopsis":" Get metadata about a nearby block","args":"(x:integer, y:integer, z:integer):table","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["plethora:scanner"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsNoteblock$playNote","name":"playNote","synopsis":" Plays a note block note","args":"(instrument:string|number, pitch:number[, volume:number])","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:noteblock"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor$getMetaByName","name":"getMetaByName","synopsis":" Find a nearby entity by name","args":"(name:string):table|nil","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["plethora:sensor"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsLaser$fire","name":"fire","synopsis":" Fire a laser in a set direction","args":"(yaw:number, pitch:number, potency:number)","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["plethora:laser"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas$canvas","name":"canvas","synopsis":"Get the 2D canvas for these glasses","args":"():table","subtarget":"org.squiddev.plethora.gameplay.modules.glasses.CanvasServer","modules":["plethora:glasses"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.computercraft.MethodsKineticTurtle$use","name":"use","synopsis":"Right click with this item","detail":"The duration is in ticks, or 1/20th of a second.","args":"([duration:integer]):boolean, string|nil","subtarget":"dan200.computercraft.api.turtle.ITurtleAccess","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsNoteblock$playSound","name":"playSound","synopsis":" Play a sound","args":"(sound:string[, pitch:number][, volume:number])","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:noteblock"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic$launch","name":"launch","synopsis":" Launch the entity in a set direction","args":"(yaw:number, pitch:number, power:number)","subtarget":"net.minecraft.entity.Entity","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKineticActions$use","name":"use","synopsis":"Right click with this item using a particular hand (\"left\" or \"right\")","detail":"The duration is in ticks, or 1/20th of a second.","args":"([duration:integer], [hand:string]):boolean, string|nil","subtarget":"net.minecraft.entity.EntityLivingBase","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor$getMetaByID","name":"getMetaByID","synopsis":" Find a nearby entity by UUID","args":"(id:string):table|nil","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["plethora:sensor"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic$walk","name":"walk","synopsis":" Walk to a coordinate","args":"(x:number, y:number, z:number):boolean, string|nil","subtarget":"net.minecraft.entity.EntityLiving","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$tell","name":"tell","synopsis":" Send a message to yourself","args":"(message:string)","subtarget":"net.minecraft.command.ICommandSender","modules":["plethora:chat"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$teleport","name":"teleport","synopsis":" Teleport to a position relative to the current one","args":"(x:number, y:number, z:number)","subtarget":"net.minecraft.entity.monster.EntityEnderman","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$look","name":"look","synopsis":" Look in a set direction","args":"(yaw:number, pitch:number)","subtarget":"net.minecraft.entity.EntityLivingBase","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$shoot","name":"shoot","synopsis":" Fire an arrow in the direction the skeleton is looking","args":"(potency:number)","subtarget":"net.minecraft.entity.monster.AbstractSkeleton","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor$getWeather","name":"getWeather","synopsis":" The weather in the current world","args":"():string","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:daylight_detector"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic$disableAI","name":"disableAI","synopsis":"Disable the AI of this entity","detail":"Be warned: this permanently scars them - they\u0027ll never be the same again!","args":"()","subtarget":"net.minecraft.entity.EntityLiving","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity$getEnder","name":"getEnder","synopsis":" Get this player\u0027s ender chest","args":"():table","subtarget":"net.minecraft.entity.player.EntityPlayer","modules":["plethora:introspection"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity$getEquipment","name":"getEquipment","synopsis":" Get this entity\u0027s held item and armor","args":"():table","subtarget":"net.minecraft.entity.EntityLivingBase","modules":["plethora:introspection"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor$getBlockLight","name":"getBlockLight","synopsis":" The light level from surrounding blocks","args":"():int","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:daylight_detector"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor$hasSky","name":"hasSky","synopsis":" Whether this world has a sky","args":"():boolean","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:daylight_detector"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsScanner$scan","name":"scan","synopsis":" Scan all blocks in the vicinity","args":"():table","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["plethora:scanner"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.computercraft.MethodsKineticTurtle$swing","name":"swing","synopsis":"Left click with this item","detail":"Returns the action taken.","args":"():boolean, string|nil","subtarget":"dan200.computercraft.api.turtle.ITurtleAccess","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative$capture","name":"capture","synopsis":"Capture all chat messages matching a Lua pattern, preventing them from being said","args":"(pattern:string)","subtarget":"org.squiddev.plethora.gameplay.modules.ChatListener$Listener","modules":["plethora:chat_creative"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsDaylightSensor$getSkyLight","name":"getSkyLight","synopsis":" The light level from the sun","args":"():int","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:daylight_detector"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKineticEntity$explode","name":"explode","synopsis":" Explode this creeper","args":"()","subtarget":"net.minecraft.entity.monster.EntityCreeper","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKinetic$isWalking","name":"isWalking","synopsis":" Whether the entity is currently walking somewhere","args":"():boolean","subtarget":"net.minecraft.entity.EntityLiving","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative$uncapture","name":"uncapture","synopsis":"Remove a capture added by capture(pattern)","args":"(pattern:string):boolean","subtarget":"org.squiddev.plethora.gameplay.modules.ChatListener$Listener","modules":["plethora:chat_creative"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsIntrospectionEntity$getInventory","name":"getInventory","synopsis":" Get this player\u0027s inventory","args":"():table","subtarget":"net.minecraft.entity.player.EntityPlayer","modules":["plethora:introspection"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$clearCaptures","name":"clearCaptures","synopsis":"Remove all listeners added by capture()","args":"()","subtarget":"org.squiddev.plethora.gameplay.modules.ChatListener$Listener","modules":["plethora:chat"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative$clearCaptures","name":"clearCaptures","synopsis":"Remove all listeners added by capture()","args":"()","subtarget":"org.squiddev.plethora.gameplay.modules.ChatListener$Listener","modules":["plethora:chat"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsClock$getMoonPhase","name":"getMoonPhase","synopsis":" The current phase of the moon","args":"():number","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:clock"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.computercraft.MethodsIntrospectionTurtle$getInventory","name":"getInventory","synopsis":" Get this turtle\u0027s inventory","args":"():table","subtarget":"dan200.computercraft.api.turtle.ITurtleAccess","modules":["plethora:introspection"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsSensor$sense","name":"sense","synopsis":" Scan for entities in the vicinity","args":"():table","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["plethora:sensor"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsClock$getCelestialAngle","name":"getCelestialAngle","synopsis":"The angle the sun or moon lies at in degrees","detail":"0 is directly overhead.","args":"():number","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:clock"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$capture","name":"capture","synopsis":"Capture all chat messages matching a Lua pattern, preventing them from being said","args":"(pattern:string)","subtarget":"org.squiddev.plethora.gameplay.modules.ChatListener$Listener","modules":["plethora:chat"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsClock$getDay","name":"getDay","synopsis":" The current day of this world","args":"():integer","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:clock"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$uncapture","name":"uncapture","synopsis":"Remove a capture added by capture(pattern)","args":"(pattern:string):boolean","subtarget":"org.squiddev.plethora.gameplay.modules.ChatListener$Listener","modules":["plethora:chat"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsClock$getTime","name":"getTime","synopsis":" The game time in ticks","args":"():integer","subtarget":"org.squiddev.plethora.api.IWorldLocation","modules":["minecraft:clock"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.vanilla.method.MethodsKineticActions$swing","name":"swing","synopsis":"Left click with this item","detail":"Returns the action taken.","args":"():boolean, string|nil","subtarget":"net.minecraft.entity.EntityLivingBase","modules":["plethora:kinetic"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection$getName","name":"getName","synopsis":" Get this entity\u0027s name","args":"():string","modules":["plethora:introspection"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection$getID","name":"getID","synopsis":"Get this entity\u0027s UUID","args":"():string","modules":["plethora:introspection"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsIntrospection$getMetaOwner","name":"getMetaOwner","synopsis":"Get this entity\u0027s metadata","args":"():string","modules":["plethora:introspection","plethora:sensor"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChat$say","name":"say","synopsis":" Send a message to everyone","args":"(message:string)","modules":["plethora:chat"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.gameplay.modules.methods.MethodsChatCreative$say","name":"say","synopsis":" Send a message to everyone","args":"(message:string)","modules":["plethora:chat_creative"]},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.MethodsModules$listModules","name":"listModules","synopsis":" Lists all modules available","args":"():table"},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.MethodsModules$filterModules","name":"filterModules","synopsis":" Gets the methods which require these modules","args":"(names:string...):table|nil"},{"target":"org.squiddev.plethora.api.module.IModuleContainer","method":"org.squiddev.plethora.integration.MethodsModules$hasModule","name":"hasModule","synopsis":" Checks whether a module is available","args":"(name:string):boolean"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addLine","name":"addLine","synopsis":"Create a new line","args":"(start:table, end:table[, color:number][, thickness:number]):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addLines","name":"addLines","synopsis":"Create a new line loop, composed of many points","args":"(points...:table, [, color:number[, thickness:number]]):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addText","name":"addText","synopsis":"Create a new text object","args":"(position:table, text:string, [, color:number][, size:number]):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addTriangle","name":"addTriangle","synopsis":"Create a new triangle, composed of three points","args":"(p1:table, p2:table, p3:table, [, color:number]):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addPolygon","name":"addPolygon","synopsis":"Create a new polygon, composed of many points","args":"(points...:table, [, color:number]):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addDot","name":"addDot","synopsis":"Create a new dot","args":"(position:table, [, color:number][, size:number]):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addGroup","name":"addGroup","synopsis":"Create a new object group","args":"(position:table):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addItem","name":"addItem","synopsis":"Create a item icon","args":"(position:table, id:string[, damage:number][, scale:number]):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$addRectangle","name":"addRectangle","synopsis":"Create a new rectangle","args":"(x:number, y:number, width:number, height:number[, color:number]):table"},{"target":"net.minecraft.tileentity.TileEntitySign","method":"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$setSignText","name":"setSignText","synopsis":" Set the lines of text on this sign","args":"(lines...:string)"},{"target":"net.minecraft.tileentity.TileEntitySign","method":"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getSignText","name":"getSignText","synopsis":" Each line of text on this sign","args":"():table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Item2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Item2D$getItem","name":"getItem","synopsis":"Get the item and damage value for this object","args":"(): string, number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Item2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Item2D$setItem","name":"setItem","synopsis":"Set the item and damage value for this object","args":"(item:string[, damage:number])"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D$insertPoint","name":"insertPoint","synopsis":"Add a specified vertex to this object","args":"(idx:int, x:number, y:number)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D$getPointCount","name":"getPointCount","synopsis":"Get the number of verticies on this object","args":"():int"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPointResizable2D$removePoint","name":"removePoint","synopsis":"Remove the specified vertex of this object","args":"(idx:int)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Group3D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas3D$addFrame","name":"addFrame","synopsis":"Create a new frame to put 2d objects in","args":"(position:table):table"},{"target":"net.minecraft.tileentity.TileEntityBrewingStand","method":"org.squiddev.plethora.integration.vanilla.method.MethodsVanillaTileEntities$getBrewTime","name":"getBrewTime","synopsis":" Number of ticks the current potion has brewed for","args":"():int"},{"target":"org.squiddev.plethora.api.method.IMethodCollection","method":"org.squiddev.plethora.integration.MethodTransferLocations","name":"getTransferLocations","synopsis":" Get a list of all available objects which can be transferred to or from","args":"([location:string]):table"},{"target":"org.squiddev.plethora.api.method.IMethodCollection","method":"org.squiddev.plethora.integration.MethodDocumentation","name":"getDocs","synopsis":"Get the documentation for all functions or the function specified","detail":"Errors if the function cannot be found.","args":"([name:string]):table|string|nil"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Positionable2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Positionable2D$getPosition","name":"getPosition","synopsis":"Get the position for this object","args":"():number, number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Positionable2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Positionable2D$setPosition","name":"setPosition","synopsis":"Set the position for this object","args":"(x:number, y:number)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas$clear","name":"clear","synopsis":"Remove all objects","args":"()"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$setColor","name":"setColor","synopsis":"Set the color for this object","args":"(color|r:int, [g:int, b:int], [alpha:int]):number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$getAlpha","name":"getAlpha","synopsis":"Get the alpha for this object","args":"():int"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$getColor","name":"getColor","synopsis":"Get the color for this object","args":"():int"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$getColour","name":"getColour","synopsis":"Get the colour for this object","args":"():int"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$setColour","name":"setColour","synopsis":"Set the colour for this object","args":"(colour|r:int, [g:int, b:int], [alpha:int]):number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Colourable$setAlpha","name":"setAlpha","synopsis":"Set the alpha for this object","args":"(alpha:int)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.ObjectRoot3D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.ObjectRoot3D$recenter","name":"recenter","synopsis":"Recenter this canvas to the current position","args":"():table"},{"target":"net.minecraftforge.common.capabilities.ICapabilityProvider","method":"org.squiddev.plethora.integration.vanilla.method.MethodFluidHandler","name":"getTanks","synopsis":" Get a list of all tanks on this side","args":"([side:string]):table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPoint2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPoint2D$getPoint","name":"getPoint","synopsis":"Get the specified vertex of this object","args":"(idx:int):number, number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPoint2D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.MultiPoint2D$setPoint","name":"setPoint","synopsis":"Set the specified vertex of this object","args":"(idx:int, x:number, y:number)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Positionable3D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Positionable3D$getPosition","name":"getPosition","synopsis":"Get the position for this object","args":"():number, number, number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Positionable3D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Positionable3D$setPosition","name":"setPosition","synopsis":"Set the position for this object","args":"(x:number, y:number, z:number)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.DepthTestable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.DepthTestable$setDepthTested","name":"setDepthTested","synopsis":" Set whether depth testing is enabled for this object","args":"(depthTest:boolean)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.DepthTestable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.DepthTestable$isDepthTested","name":"isDepthTested","synopsis":" Determine whether depth testing is enabled for this object","args":"():boolean"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Scalable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Scalable$getScale","name":"getScale","synopsis":"Get the scale for this object","args":"():number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Scalable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Scalable$setScale","name":"setScale","synopsis":"Set the scale for this object","args":"(scale:number)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.BaseObject","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas$remove","name":"remove","synopsis":"Remove this object from the canvas","args":"()"},{"target":"net.minecraftforge.items.IItemHandler","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemHandlerDrop","name":"drop","synopsis":"Drop an item on the ground","detail":"Returns the number of items dropped","args":"(slot:int[, limit:int][, direction:string]):int"},{"target":"net.minecraftforge.items.IItemHandler","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemHandlerSuck","name":"suck","synopsis":" Suck an item from the ground","args":"([slot:int][, limit:int]):int"},{"target":"net.minecraftforge.items.IItemHandler","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryTransfer$pullItems","name":"pullItems","synopsis":"Pull items to this inventory from another inventory","detail":"Returns the amount transferred.","args":"(from:string, fromSlot:int[, limit:int][, toSlot:int]):int"},{"target":"net.minecraftforge.items.IItemHandler","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventory$getItem","name":"getItem","synopsis":"The item in the specified slot","detail":"The slot number starts from 1.","args":"(slot:integer):table|nil"},{"target":"net.minecraftforge.items.IItemHandler","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventory$getItemMeta","name":"getItemMeta","synopsis":"The metadata of the item in the specified slot","detail":"The slot number starts from 1.","args":"(slot:integer):table|nil"},{"target":"net.minecraftforge.items.IItemHandler","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryTransfer$pushItems","name":"pushItems","synopsis":"Push items from this inventory to another inventory","detail":"Returns the amount transferred.","args":"(to:string, fromSlot:int[, limit:int][, toSlot:int]):int"},{"target":"net.minecraftforge.items.IItemHandler","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventory$size","name":"size","synopsis":" The size of the inventory","args":"():integer"},{"target":"net.minecraftforge.items.IItemHandler","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventory$list","name":"list","synopsis":" List all items in this inventory","args":"():table"},{"target":"java.lang.Object","method":"org.squiddev.plethora.integration.MethodMeta","name":"getMetadata","synopsis":" Get metadata about this object","args":"():table"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Rotatable3D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Rotatable3D$setRotation","name":"setRotation","synopsis":"Set the rotation for this object, passing nothing if it should face the player","args":"([x:number, y:number, z:number])"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Rotatable3D","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object3d.Rotatable3D$getRotation","name":"getRotation","synopsis":"Get the rotation for this object, or nil if it faces the player","args":"():nil|number, number, number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.ObjectGroup$Frame2D","method":"org.squiddev.plethora.gameplay.modules.glasses.methods.MethodsCanvas2D$getSize","name":"getSize","synopsis":"Get the size of this canvas","args":"():number, number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setLineHeight","name":"setLineHeight","synopsis":"Set the line height for this object","args":"(scale:number)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setText","name":"setText","synopsis":"Set the text for this object","args":"(text:string)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$setShadow","name":"setShadow","synopsis":"Set the shadow for this object","args":"(shadow:boolean):number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$getText","name":"getText","synopsis":"Get the text for this object","args":"():string"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$getLineHeight","name":"getLineHeight","synopsis":"Get the line height for this object","args":"():number"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.Textable$hasShadow","name":"hasShadow","synopsis":"Get the shadow for this object","args":"():boolean"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Rectangle","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Rectangle$setSize","name":"setSize","synopsis":"Set the size of this rectangle","args":"(width:number, height:number)"},{"target":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Rectangle","method":"org.squiddev.plethora.gameplay.modules.glasses.objects.object2d.Rectangle$getSize","name":"getSize","synopsis":"Get the size of this rectangle","args":"():number, number"},{"target":"org.squiddev.plethora.api.reference.ItemSlot","method":"org.squiddev.plethora.integration.vanilla.method.MethodItemConsume","name":"consume","synopsis":" Consume one item from this stack","args":"()"},{"target":"org.squiddev.plethora.api.reference.ItemSlot","method":"org.squiddev.plethora.integration.vanilla.method.MethodItemElytraActivate","name":"setActive","synopsis":"Set whether these elytra are active or not","args":"([active:boolean])"},{"target":"org.squiddev.plethora.api.reference.ItemSlot","method":"org.squiddev.plethora.integration.vanilla.method.MethodsInventoryWorld$MethodItemDrop","name":"drop","synopsis":"Drop an item on the ground","detail":"Returns the number of items dropped","args":"([limit:int][, direction:string]):int"}]